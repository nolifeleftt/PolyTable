from bs4 import BeautifulSoup
import requests
import datetime
import telebot
from telebot import types
import time

def get_url():
    today = datetime.date.today()
    tomorrow = today + datetime.timedelta(days=1)
    if today.isoweekday() == 7:
        url = f'https://ruz.spbstu.ru/faculty/100/groups/35646?date={str(tomorrow)}'
    else:
        url = f'https://ruz.spbstu.ru/faculty/100/groups/35646?date={str(today)}'
    return url

def get_nxt_url():
    today = datetime.date.today()
    if today.isoweekday() == 7:
        nxt = today + datetime.timedelta(days=8)
        nxt_url = f'https://ruz.spbstu.ru/faculty/100/groups/35646?date={str(nxt)}'
    else:
        nxt = today + datetime.timedelta(days=7)
        nxt_url = f'https://ruz.spbstu.ru/faculty/100/groups/35646?date={str(nxt)}'
        return nxt_url
def parse(url):
    response = requests.get(url)
    response.encoding = 'utf-8'
    soup = BeautifulSoup(response.text, 'lxml')
    page = soup.find_all('li', class_='schedule__day')
    t = [[], [], [], [], [], [], []]
    i = 0
    for day in page:
        date = (day.find('div', class_='schedule__date').text.strip())
        t[i].append('üóìÔ∏è' + date)
        lessons = day.find_all('li', class_='lesson')
        for lesson in lessons:
            t[i].append('üï∞Ô∏è' + lesson.find('div', class_='lesson__subject').text.strip() + ', ' + (
                lesson.find('div', class_='lesson__type').text.strip()))
            t[i].append('üìå' + lesson.find('div', class_='lesson__places').find('div').text.strip() + '\n')
            # t[i].append('')
        i += 1
    return t

groups = {}
with open('groups.txt') as inp:
    for i in inp.readlines():
        key,val = i.strip().split(':')
        groups[key] = val
while True:
    today = datetime.date.today()
    print(today)
    def file_user_id(user, uid):
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏
        file = open('venv\ids.txt', 'a')
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
        file.write(str(uid) + '\n')
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
        file.close()
    l = []
    with open('venv\ids.txt') as f:
        l = f.read().splitlines()
    dt = datetime.datetime.today()
    client = telebot.TeleBot('5741562885:AAE0B_c2HMWYTNS0HA_c1HnkJE4ttq7vTD4')

    @client.message_handler(commands=['start'])
    def welcome(message):
        markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
        client.send_message(message.chat.id, '–ú–µ–Ω—é', reply_markup=markup_reply)
        btn_1 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
        btn_2 = types.KeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
        markup_reply.add(btn_1, btn_2)
        client.send_message(message.chat.id, '–ú–µ–Ω—é', reply_markup=markup_reply)
        file_user_id(message.chat.username, message.chat.id)

    @client.message_handler(content_types=['text'])
    def get_rasp(message):
        if message.text == '–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
            markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_1 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')
            btn_2 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
            btn_3 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é')
            btn_4 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é')
            btn_5 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup_reply.add(btn_1, btn_2,btn_3, btn_4, btn_5)
            client.send_message(message.chat.id, '–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', reply_markup=markup_reply)
        if message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è':
            if today.isoweekday() == 5:
                client.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!")
            else:
                t = parse(get_url())
                res = '\n'.join(t[today.weekday()])
                client.send_message(message.chat.id, res)
        if message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞':
            if today.isoweekday() == 5:
                client.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!")
            else:
                t = parse(get_url())
                res = ' ' * 39 + '\n'.join(t[today.weekday() + 1]) + '\n' +' ' * 39
                client.send_message(message.chat.id, res)
        if message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é':
            t = parse(get_url())
            res =''
            for i in t:
                res += '\n'.join(i)
                if i != t[-1] and i != t[-2]:
                    res += '\n\n\n' #+ ' ' * 39 + '\n'
            client.send_message(message.chat.id, res)
        if message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é':
            nxt_week = parse(get_nxt_url())
            res = ''
            for i in nxt_week:
                res += '\n'.join(i)
                if i != nxt_week[-1] and i != nxt_week[-2]:
                    res += '\n\n\n'  # + ' ' * 39 + '\n'
            client.send_message(message.chat.id, res)

        if message.text == '–ù–∞–∑–∞–¥':
            markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_1 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
            btn_2 = types.KeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å')
            markup_reply.add(btn_1, btn_2)
            client.send_message(message.chat.id, '–ú–µ–Ω—é', reply_markup=markup_reply)

    client.polling(none_stop=True, interval=0)
