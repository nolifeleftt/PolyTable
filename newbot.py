# -*- coding: utf-8 -*-
from bs4 import BeautifulSoup
import requests
import datetime
import telebot
from telebot import types

def check_link(url):
    response = requests.get(url)
    response.encoding = 'utf-8'
    soup = BeautifulSoup(response.text, 'lxml')
    if soup.find('a', class_='switcher__link') != None:
        if soup.find('a', class_='switcher__link').text == '–ü—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–µ–¥–µ–ª—è':
            return True
        else:
            return False

def open_file(filename):
    ids = {}
    with open(filename) as file:
        for i in file.readlines():
            key, val = i.strip().split(';')
            ids[key] = val
    return ids

def get_url(id, date):
    ids = {}
    with open('ids.txt') as file:
        for i in file.readlines():
            key, val = i.strip().split(';')
            ids[key] = val
    url = ids[str(id)] + f'?date={date}'
    return url

def parse(url):
    response = requests.get(url)
    response.encoding = 'utf-8'
    soup = BeautifulSoup(response.text, 'lxml')
    page = soup.find_all('li', class_='schedule__day')
    t = [[], [], [], [], [], [], []]
    i = 0
    for day in page:
        date = (day.find('div', class_='schedule__date').text.strip())
        t[i].append('üóìÔ∏è' +'<b>' + date + '</b>')
        lessons = day.find_all('li', class_='lesson')
        for lesson in lessons:
            t[i].append('‚è∞' + lesson.find('div', class_='lesson__subject').text.strip() + ', ' + (
                lesson.find('div', class_='lesson__type').text.strip()))
            t[i].append('üìå' + lesson.find('div', class_='lesson__places').find('div').text.strip() + '\n')
        i += 1
    return t

bot = telebot.TeleBot('5741562885:AAE0B_c2HMWYTNS0HA_c1HnkJE4ttq7vTD4')
today = datetime.date.today()
print(today)
def file_user_id(uid, link):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏
    file = open('ids.txt', 'a')
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
    if link.find('?') != -1:
        file.write(str(uid) + ';' + str(link)[:str(link).find('?')] + '\n')
    else:
        file.write(str(uid) + ';' + str(link) + '\n')
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
    file.close()
    l = []
    dt = datetime.datetime.today()

@bot.message_handler(commands=['start'])
def begin(message):
    ids = open_file('ids.txt')
    if str(message.chat.id) not in ids:
        markup_reply = types.InlineKeyboardMarkup()
        btn_my_site = types.InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', url='https://ruz.spbstu.ru')
        markup_reply.add(btn_my_site)
        msg = bot.send_message(message.chat.id,
                                  '–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã.\n\n<i>–ù–∞–π—Ç–∏ –µ–µ –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –ø–µ—Ä–µ–π–¥—è —Å—é–¥–∞</i>: https://ruz.spbstu.ru/ –∏ —É–∫–∞–∑–∞–≤ —Å–≤–æ–∏ –∏–Ω—Å—Ç–∏—Ç—É—Ç, –∫—É—Ä—Å –∏ –≥—Ä—É–ø–ø—É.',
                                  reply_markup=markup_reply, parse_mode='HTML')
        bot.register_next_step_handler(msg, register)
        bot.send_message(message.chat.id, '–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Å–∫–æ–ø—Ä–∏—Ä—É–µ—à—å —Å—Å—ã–ª–∫—É –æ—Ç–ø—Ä–∞–≤—å –µ–µ –º–Ω–µ.', parse_mode='HTML')

    else:
        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
        callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
        callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
        callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
        callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
        keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
        bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)
def register(message):
    ids = open_file('ids.txt')
    if 'ruz' in str(message.text).strip() and str(message.chat.id) not in ids:
        if check_link(message.text.split()[-1]):
            markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
            file_user_id(message.chat.id, message.text.split()[-1])
            file = open('users.txt', 'a')
            file.write(str(message.from_user.username) + '\n')
            file.close()
            bot.send_message(440453234, message.from_user.username + ' ' + 'just registred!')
            print(message.from_user.username, 'just registred!')
            bot.send_message(message.chat.id, '<i>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</i>\n\n<i>–ï—Å–ª–∏ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ —Ç—É —Å—Å—ã–ª–∫—É –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É, –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" -> "–°–±—Ä–æ—Å" –∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É.</i>', reply_markup=markup_reply,  parse_mode='HTML')
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
            bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)
        else:
            markup_reply = types.InlineKeyboardMarkup()
            btn_my_site = types.InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', url='https://ruz.spbstu.ru')
            markup_reply.add(btn_my_site)
            msg = bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã', reply_markup=markup_reply)
            bot.register_next_step_handler(msg, register)
@bot.message_handler(content_types=["text"])
def any_msg(message):
    if message.text == '–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
        callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
        callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
        callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
        callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
        keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
        bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    ids = open_file('ids.txt')
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º
    if call.message:
        if call.data == "today":
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
            today = datetime.date.today()
            if today.isoweekday() == 7:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!", reply_markup=keyboard)
            else:
                if str(call.message.chat.id) in ids:
                    t = parse(get_url(call.message.chat.id, today))
                    res = '\n'.join(t[today.weekday()])
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=res, reply_markup=keyboard, parse_mode='HTML')
                else:
                    markup_reply = types.InlineKeyboardMarkup()
                    btn_my_site = types.InlineKeyboardButton(text='–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º', url='https://ruz.spbstu.ru')
                    markup_reply.add(btn_my_site)
                    msg = bot.send_message(call.message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', reply_markup=markup_reply, parse_mode='HTML')
                    bot.register_next_step_handler(msg, register)
        if call.data == "tomorrow":
            today = datetime.date.today()
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
            if today.isoweekday() == 6:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–°–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!", reply_markup=keyboard)
            elif today.isoweekday() == 7:
                t = parse(get_url(call.message.chat.id, today + datetime.timedelta(days=1)))
                res = ' ' * 39 + '\n'.join(t[0]) + '\n' + ' ' * 39
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res, parse_mode='HTML', reply_markup=keyboard)
            else:
                if str(call.message.chat.id) in ids:
                    t = parse(get_url(call.message.chat.id, today))
                    res = ' ' * 39 + '\n'.join(t[today.weekday() + 1]) + '\n' + ' ' * 39
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res, parse_mode='HTML', reply_markup=keyboard)
                else:
                    markup_reply = types.InlineKeyboardMarkup()
                    btn_my_site = types.InlineKeyboardButton(text='–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º', url='https://ruz.spbstu.ru')
                    markup_reply.add(btn_my_site)
                    msg = bot.send_message(call.message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', reply_markup=markup_reply, parse_mode='HTML')
                    bot.register_next_step_handler(msg, register)
        if call.data == 'week':
            today = datetime.date.today()
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
            if str(call.message.chat.id) in ids:
                today = datetime.date.today()
                t = parse(get_url(call.message.chat.id, today))
                res =''
                for i in t:
                    res += '\n'.join(i)
                    if i != t[-1] and i != t[-2]:
                        res += '\n\n\n' #+ ' ' * 39 + '\n'
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res, parse_mode='HTML', reply_markup=keyboard)
            else:
                markup_reply = types.InlineKeyboardMarkup()
                btn_my_site = types.InlineKeyboardButton(text='–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º', url='https://ruz.spbstu.ru')
                markup_reply.add(btn_my_site)
                msg = bot.send_message(call.message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', reply_markup=markup_reply, parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
        if call.data == 'nxtweek':
            today = datetime.date.today()
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
            if str(call.message.chat.id) in ids:
                if today.isoweekday() == 7:
                    nxt = today + datetime.timedelta(days=8)
                    nxt_url = get_url(call.message.chat.id, nxt)
                else:
                    nxt = today + datetime.timedelta(days=7)
                    nxt_url = get_url(call.message.chat.id, nxt)
                nxt_week = parse(nxt_url)
                res = ''
                for i in nxt_week:
                    res += '\n'.join(i)
                    if i != nxt_week[-1] and i != nxt_week[-2]:
                        res += '\n\n\n'  # + ' ' * 39 + '\n'
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res, parse_mode='HTML', reply_markup=keyboard)
            else:
                markup_reply = types.InlineKeyboardMarkup()
                btn_my_site = types.InlineKeyboardButton(text='–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º', url='https://ruz.spbstu.ru')
                markup_reply.add(btn_my_site)
                msg = bot.send_message(call.message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.', reply_markup=markup_reply, parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
        if call.data == 'contact':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")
            keyboard.add(callback_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:\n@nolifeleftt\n@plutoshka\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –í–∞–º –ø–æ–º–æ–∂–µ–º‚ù§", parse_mode='HTML', reply_markup=keyboard)
        if call.data == 'clear_link':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–î–∞", callback_data="yesclear")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="noclear")
            keyboard.add(callback_button, callback_button_2)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω–∞, –≤—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=keyboard)
        if call.data == 'yesclear':
            ids = open_file('ids.txt')
            if str(call.message.chat.id) in ids:
                ids.pop(str(call.message.chat.id))
                markup_reply = types.InlineKeyboardMarkup()
                btn_my_site = types.InlineKeyboardButton(text='–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º', url='https://ruz.spbstu.ru')
                markup_reply.add(btn_my_site)
                msg = bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id, text =
                                          '–°—Å—ã–ª–∫–∞ —Å–±—Ä–æ—à–µ–Ω–∞, <i>–ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã</i>', parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
                file = open('ids.txt', 'w')
                for key, value in ids.items():
                    file.write(f'{key};{value}\n')
                file.close()
            else:
                markup_reply = types.InlineKeyboardMarkup()
                btn_my_site = types.InlineKeyboardButton(text='–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º', url='https://ruz.spbstu.ru')
                markup_reply.add(btn_my_site)
                msg = bot.send_message(call.message.chat.id,
                                          '–°—Å—ã–ª–∫–∞ —É–∂–µ —Å–±—Ä–æ—à–µ–Ω–∞, <i>–ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã</i>',
                                          reply_markup=markup_reply, parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
        if call.data == 'noclear':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="contact")
            callback_button_2 = types.InlineKeyboardButton(text="–°–±—Ä–æ—Å–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data="clear_link")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")
            keyboard.add(callback_button, callback_button_2, callback_button_3)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=
            "<b>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫</b>", reply_markup=keyboard, parse_mode='HTML')
        if call.data == 'settings':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="contact")
            callback_button_2 = types.InlineKeyboardButton(text="–°–±—Ä–æ—Å", callback_data="clear_link")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")
            keyboard.add(callback_button, callback_button_2, callback_button_3)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=
            "<b>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫</b>", reply_markup=keyboard, parse_mode='HTML')
        if call.data == 'back':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            callback_button_5 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4, callback_button_5)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=
            "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard, parse_mode='HTML')

bot.infinity_polling(timeout=10, long_polling_timeout=5)