# -*- coding: utf-8 -*-
from bs4 import BeautifulSoup
import requests
import datetime
import telebot
from telebot import types

def parse_day(url, data):
    response = requests.get(url)
    response.encoding = 'utf-8'
    soup = BeautifulSoup(response.text, 'lxml')
    page = soup.find_all('li', class_='schedule__day')
    t = []
    for day in page:
        date = day.find('div')
        if str(date.text[:2]) == str(data.strftime("%d")):
            t.append('üóìÔ∏è' + '<b>' + date.text + '</b>')
            lessons = day.find_all('li', class_='lesson')
            for lesson in lessons:
                t.append('‚è∞' + lesson.find('div', class_='lesson__subject').text.strip() + ', ' + (
                    lesson.find('div', class_='lesson__type').text.strip()))
                t.append('üìå' + lesson.find('div', class_='lesson__places').find('div').text.strip() + '\n')
    if not t:
        res = f"<i>–ù–∞ {data} –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç.</i>"
    else:
        res = ' ' * 39 + '\n'.join(t) + '\n' + ' ' * 39
    return res

def open_file(filename):
    contents = {}
    with open(filename) as file:
        for i in file.readlines():
            key, val = i.strip().split(';')
            contents[key] = val
    return contents

def get_url(id, date):
    ids = {}
    with open('ids.txt') as file:
        for i in file.readlines():
            key, val = i.strip().split(';')
            ids[key] = val
    url = 'https://ruz.spbstu.ru/faculty/100/groups/' + ids[str(id)] + f'?date={date}'
    return url

def parse(url):
    response = requests.get(url)
    response.encoding = 'utf-8'
    soup = BeautifulSoup(response.text, 'lxml')
    page = soup.find_all('li', class_='schedule__day')
    t = [[], [], [], [], [], [], []]
    i = 0
    for day in page:
        date = (day.find('div', class_='schedule__date').text.strip())
        t[i].append('üóìÔ∏è' + '<b>' + date + '</b>')
        lessons = day.find_all('li', class_='lesson')
        for lesson in lessons:
            t[i].append('‚è∞' + lesson.find('div', class_='lesson__subject').text.strip() + ', ' + (
                lesson.find('div', class_='lesson__type').text.strip()))
            t[i].append('üìå' + lesson.find('div', class_='lesson__places').find('div').text.strip() + '\n')
        i += 1
    return t

bot = telebot.TeleBot('5741562885:AAE0B_c2HMWYTNS0HA_c1HnkJE4ttq7vTD4')
today = datetime.date.today()
print(today)
def file_user_id(uid, group):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏
    file = open('ids.txt', 'a')
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
    file.write(str(uid) + ';' + str(group) + '\n')
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
    file.close()


@bot.message_handler(commands=['start'])
def begin(message):
    ids = open_file('ids.txt')
    if str(message.chat.id) not in ids:
        msg = bot.send_message(message.chat.id,
                                  '–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –ø—Ä–∏—à–ª–∏ –º–Ω–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã.\n<i>–ù–∞–ø—Ä–∏–º–µ—Ä, 3733805/10003</i>', parse_mode='HTML')
        bot.register_next_step_handler(msg, register)

    else:
        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
        callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
        callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
        callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
        keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
        bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)
def register(message):
    ids = open_file('ids.txt')
    groups = open_file('groups.txt')
    if str(message.chat.id) not in ids and str(message.text).lower() in groups:
        markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
        file_user_id(message.chat.id, groups[message.text.lower()])
        file = open('users.txt', 'a')
        file.write(str(message.from_user.username) + '\n')
        file.close()
        bot.send_message(440453234,'@' + message.from_user.username + ' ' + 'just registred!')
        print(message.from_user.username, 'just registred!')
        bot.send_message(message.chat.id, f'–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n<b>–í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {message.text}</b>\n<i>–ü–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É –º–æ–∂–Ω–æ –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫</i>', reply_markup=markup_reply,  parse_mode='HTML')
        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
        callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
        callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
        callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
        keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
        bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)
    elif str(message.chat.id) in ids:
        msg = bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
        bot.register_next_step_handler(msg, begin)
    else:
        msg = bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –≥—Ä—É–ø–ø—É.\n<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.</i>', parse_mode='HTML')
        bot.register_next_step_handler(msg, register)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    ids = open_file('ids.txt')
    if call.message:
        if call.data == "today":
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
            today = datetime.date.today()
            if today.isoweekday() == 7:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–µ–≥–æ–¥–Ω—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!", reply_markup=keyboard)
            else:
                if str(call.message.chat.id) in ids:
                    today = datetime.date.today()
                    res = parse_day(get_url(call.message.chat.id, today), today)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res,
                                          parse_mode='HTML', reply_markup=keyboard)
                else:
                    msg = bot.send_message(call.message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫–∞—è —É –≤–∞—Å –≥—Ä—É–ø–ø–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.', parse_mode='HTML')
                    bot.register_next_step_handler(msg, register)
        if call.data == "tomorrow":
            today = datetime.date.today()
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
            if today.isoweekday() == 6:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–ó–∞–≤—Ç—Ä–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!", reply_markup=keyboard)
            elif today.isoweekday() == 7:
                if str(call.message.chat.id) in ids:
                    tomorrow = datetime.date.today() + datetime.timedelta(days=1)
                    res = parse_day(get_url(call.message.chat.id, tomorrow), tomorrow)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res,
                                          parse_mode='HTML', reply_markup=keyboard)
            else:
                if str(call.message.chat.id) in ids:
                    tomorrow = datetime.date.today() + datetime.timedelta(days=1)
                    res = parse_day(get_url(call.message.chat.id, today), tomorrow)
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res, parse_mode='HTML', reply_markup=keyboard)
                else:
                    msg = bot.send_message(call.message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫–∞—è —É –≤–∞—Å –≥—Ä—É–ø–ø–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.', parse_mode='HTML')
                    bot.register_next_step_handler(msg, register)
        if call.data == 'week':
            today = datetime.date.today()
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
            if str(call.message.chat.id) in ids:
                today = datetime.date.today()
                t = parse(get_url(call.message.chat.id, today))
                res =''
                for i in t:
                    res += '\n'.join(i)
                    if i != t[-1] and i != t[-2]:
                        res += '\n\n\n' #+ ' ' * 39 + '\n'
                if res:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res, parse_mode='HTML', reply_markup=keyboard)
                else:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="<i>–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç.</i>",
                                          parse_mode='HTML', reply_markup=keyboard)
            else:
                msg = bot.send_message(call.message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫–∞—è —É –≤–∞—Å –≥—Ä—É–ø–ø–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.', parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
        if call.data == 'nxtweek':
            today = datetime.date.today()
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
            callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
            callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
            callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
            keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
            if str(call.message.chat.id) in ids:
                #if today.isoweekday() == 7:
                    #nxt = today + datetime.timedelta(days=7)
                    #nxt_url = get_url(call.message.chat.id, nxt)
                #else:
                nxt = today + datetime.timedelta(days=7)
                nxt_url = get_url(call.message.chat.id, nxt)
                nxt_week = parse(nxt_url)
                res = ''
                for i in nxt_week:
                    res += '\n'.join(i)
                    if i != nxt_week[-1] and i != nxt_week[-2]:
                        res += '\n\n\n'  # + ' ' * 39 + '\n'
                if res:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=res,
                                          parse_mode='HTML', reply_markup=keyboard)
                else:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text="<i>–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç.</i>",
                                          parse_mode='HTML', reply_markup=keyboard)
            else:
                msg = bot.send_message(call.message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫–∞—è —É –≤–∞—Å –≥—Ä—É–ø–ø–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.', parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
        if call.data == 'edit_group':
            ids = open_file('ids.txt')
            if str(call.message.chat.id) in ids:
                ids.pop(str(call.message.chat.id))
                msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=
                '<i>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã</i>', parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
                file = open('ids.txt', 'w')
                for key, value in ids.items():
                    file.write(f'{key};{value}\n')
                file.close()
            else:
                msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=
                                       '–ì—Ä—É–ø–ø–∞ —É–∂–µ —Å–±—Ä–æ—à–µ–Ω–∞, <i>–ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã</i>', parse_mode='HTML')
                bot.register_next_step_handler(msg, register)
        if call.data == 'contact':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")
            keyboard.add(callback_button)
            msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:\n@nolifeleftt\n@plutoshka\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º –≤ –ª—Å, –∏–ª–∏ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É, –Ω–∞—Ö–æ–¥—è—Å—å –≤ —ç—Ç–æ–º –º–µ–Ω—é.\n<b>–£–±–µ–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ—Å—å–±–∞ –æ–ø–∏—Å—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.</b>\n<i>–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –í–∞–º –ø–æ–º–æ–∂–µ–º</i>‚ù§\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç, –ø–æ–º–æ—á—å —Å –æ–ø–ª–∞—Ç–æ–π —Ö–æ—Å—Ç–∏–Ω–≥–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π:\n<b>2202 2022 4665 7088</b>",
                                  parse_mode='HTML', reply_markup=keyboard)
            bot.register_next_step_handler(msg, cont)
        if call.data == 'back':
            keyboard = types.InlineKeyboardMarkup()
            callback_button = types.InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É", callback_data="edit_group")
            callback_button_2 = types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="contact")
            keyboard.add(callback_button, callback_button_2)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫", reply_markup=keyboard)
def cont(message):
    if message.text:
        bot.send_message(440453234, message.from_user.username + ' —Å–æ–æ–±—â–∞–µ—Ç:\n' + message.text)

@bot.message_handler(commands=['rasp'])
def rasp(message):
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text="–ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="today")
    callback_button_2 = types.InlineKeyboardButton(text="–ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="tomorrow")
    callback_button_3 = types.InlineKeyboardButton(text="–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é", callback_data="week")
    callback_button_4 = types.InlineKeyboardButton(text="–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é", callback_data="nxtweek")
    keyboard.add(callback_button, callback_button_2, callback_button_3, callback_button_4)
    bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –ø—Ä–∏—Å–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", reply_markup=keyboard)
@bot.message_handler(commands=['settings'])
def sets(message):
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É", callback_data="edit_group")
    callback_button_2 = types.InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", callback_data="contact")
    callback_button_3 = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="today")
    keyboard.add(callback_button, callback_button_2, callback_button_3)
    bot.send_message(message.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫." , reply_markup=keyboard)
bot.infinity_polling(timeout=10, long_polling_timeout=5)